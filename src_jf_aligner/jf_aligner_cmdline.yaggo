purpose "jf_aligner computes approximate alignments between reference and query DNA sequences"
description ""

option("s", "size") {
  description "Approximate size of the reference sequence"
  uint64; required; suffix }
option("m", "mer") {
  description "Alignment K-mer size -- the best practice is to use k-mer size such that the number of distinct k-mer s of that size was about greater or equal to the size of the reference.  4^15 ~ 1 Billion, so 15-mers are good for reference up to 1 Billion in size, 16-mers are good for references up to 4 Billion, etc. "
  uint32; default 15 }
option("F", "fine-mer") {
  description "Mer size for fine alignment (experimental)"
  uint32 }
option("psa-min") {
  description "Min suffix length in SA. Increase for speed up at the cost of memoryi, minimum 12"
  uint32; default 13 }
option("t", "threads") {
  description "Number of threads"
  uint32; default 1 }
option("stretch-constant") {
  description "Constant tolerated stretch between matching k-mer in LIS"
  int; default 10 }
option("stretch-factor") {
  description "Factor tolerated stretch between matching k-mer in LIS"
  double; default 1.3 }
option("stretch-cap") {
  description "Maximum distance between two consecutive k-mers in LIS"
  double; default 10000.0 }
option("window-size") {
  description "Check stretch on every window of k-mer this size"
  uint32; default 1 }
option("forward") {
  description "Show all matches in forward direction"
  off }
option("B", "bases-matching") {
  description "Minimum percent of bases matching exactly "
  double; default 17.0 }
option("M", "mers-matching") {
  description "Minimum percent of k-mers matching"
  double; default 0.0 }
option("N", "num-matches") {
  description "Maximum number of best matches output 0:unlimited, for PAF output format only"
  uint32; default 0 }
option("details") {
  description "Output files with detail k-mer information"
  c_string; typestr "path" }
option("o", "coords") {
  description "Output file with approximate alignment coordinates information (stdout)"
  c_string; typestr "path"; }
option("max-match") {
  description "Output more than a single match between any two sequences"
  off }
option("H", "no-header") {
  description "Do not output header (for standard or compact output format only)"
  off }
option("0", "zero-match") {
  description "Output header even if query has no match (for standard or compact output format only)"
  off }
option("max-count") {
  description "Maximum count of K-mer in reference sequence to be used for alignment. K-mers with count above this value are not used for alignment "
  uint32; default 5000 }
option("l", "unitigs-lengths") {
  description "Length of k-unitigs (uncommon use case)"
  imply "forward"
  c_string; typestr "path" }
option("u", "unitigs-sequences") {
  description "Fasta file containing the sequence of the k-unitigs (uncommon use case)"
  imply "forward"; conflict "unitigs-lengths"
  c_string; typestr "path" }
option("f", "format") {
  description "Output format 0:standard 1:compact 2:PAF"
  uint32; default 1 }
option("k", "k-mer") {
  description "Length of k-mer used to create k-unitigs (uncommon use case)"
  uint32 }
option("r", "reference") {
  description "reference sequence file"
  c_string; typestr "path"; multiple }
option("q", "pacbio") {
  description "query sequence file"
  c_string; typestr "path"; multiple }
